version: '3.0'
description: Test manifest
repository: https://github.com/
hydraVersion: "4"

typegen:
  customTypes: 
    lib: '@zeitgeistpm/types/dist/interfaces'
    typedefsLoc: ./indexer/types.json
  metadata:
    source: wss://bsr.zeitgeist.pm
  events:
    - system.ExtrinsicSuccess
    - system.ExtrinsicFailed
    - predictionMarkets.BoughtCompleteSet
    - predictionMarkets.MarketApproved
    - predictionMarkets.MarketCreated
    - predictionMarkets.MarketStartedWithSubsidy
    - predictionMarkets.MarketInsufficientSubsidy
    - predictionMarkets.MarketDisputed
    - predictionMarkets.MarketRejected
    - predictionMarkets.MarketReported
    - predictionMarkets.MarketCancelled
    - predictionMarkets.SoldCompleteSet
    - swaps.PoolCreate
    - swaps.SwapExactAmountIn
    - swaps.SwapExactAmountOut
    - balances.Endowed
    - balances.DustLost
    - balances.Transfer
    - balances.BalanceSet
    - balances.Reserved
    - balances.Unreserved
    - tokens.Endowed
    - currency.Transferred
    - currency.Deposited
    - currency.Withdrawn
  outDir: chain
  
mappings:
  mappingsModule: mappings
  eventHandlers:
    - event: system.ExtrinsicSuccess
      handler: systemExtrinsicSuccess
    - event: system.ExtrinsicFailed
      handler: systemExtrinsicFailed
    - event: predictionMarkets.BoughtCompleteSet
      handler: predictionMarketBoughtCompleteSet
    - event: predictionMarkets.MarketApproved
      handler: predictionMarketApprovedV1
      filter:
        specVersion: '[0,30)'
    - event: predictionMarkets.MarketApproved
      handler: predictionMarketApprovedV2
      filter:
        specVersion: '[30,)'
    - event: predictionMarkets.MarketCreated
      handler: predictionMarketCreatedV1
      filter:
        specVersion: '[0,30)'
    - event: predictionMarkets.MarketCreated
      handler: predictionMarketCreatedV2
      filter:
        specVersion: '[30,)'
    - event: predictionMarkets.MarketStartedWithSubsidy
      handler: predictionMarketStartedWithSubsidyV1
      filter:
        specVersion: '[0,30)'
    - event: predictionMarkets.MarketStartedWithSubsidy
      handler: predictionMarketStartedWithSubsidyV2
      filter:
        specVersion: '[30,)'
    - event: predictionMarkets.MarketInsufficientSubsidy
      handler: predictionMarketInsufficientSubsidyV1
      filter:
        specVersion: '[0,30)'
    - event: predictionMarkets.MarketInsufficientSubsidy
      handler: predictionMarketInsufficientSubsidyV2
      filter:
        specVersion: '[30,)'
    - event: predictionMarkets.MarketDisputed
      handler: predictionMarketDisputedV1
      filter:
        specVersion: '[0,30)'
    - event: predictionMarkets.MarketDisputed
      handler: predictionMarketDisputedV2
      filter:
        specVersion: '[30,)'
    - event: predictionMarkets.MarketRejected
      handler: predictionMarketRejected
    - event: predictionMarkets.MarketReported
      handler: predictionMarketReportedV1
      filter:
        specVersion: '[0,30)'
    - event: predictionMarkets.MarketReported
      handler: predictionMarketReportedV2
      filter:
        specVersion: '[30,)'
    - event: predictionMarkets.MarketCancelled
      handler: predictionMarketCancelled
    - event: predictionMarkets.SoldCompleteSet
      handler: predictionMarketSoldCompleteSet
    - event: swaps.PoolCreate
      handler: swapPoolCreated
    - event: swaps.SwapExactAmountIn
      handler: swapExactAmountIn
    - event: swaps.SwapExactAmountOut
      handler: swapExactAmountOut
    - event: balances.Endowed
      handler: balancesEndowed
    - event: balances.DustLost
      handler: balancesDustLost
    - event: balances.Transfer
      handler: balancesTransfer
    - event: balances.BalanceSet
      handler: balancesBalanceSet
    - event: balances.Reserved
      handler: balancesReserved
    - event: balances.Unreserved
      handler: balancesUnreserved
    - event: tokens.Endowed
      handler: tokensEndowed
    - event: currency.Transferred
      handler: currencyTransferred
    - event: currency.Deposited
      handler: currencyDeposited
    - event: currency.Withdrawn
      handler: currencyWithdrawn
  preBlockHooks:
  postBlockHooks: