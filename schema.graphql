type Account @entity {
  "Account address"
  wallet: String!
  assetBalances: [AssetBalance] @derivedFrom(field: "account")
  historicalAssetBalances: [HistoricalAssetBalance] @derivedFrom(field: "account")
}

type AssetBalance @entity {
  account: Account!
  assetId: String!
  balance: BigInt!
}

type HistoricalAssetBalance @entity {
  account: Account!
  event: String!
  assetId: String!
  amount: BigInt!
  balance: BigInt!
  blockNumber: Int!
  timestamp: BigInt!
}

type Market @entity {
  marketId: Int! 
  creator: String!
  creation: String!
  oracle: String!
  slug: String
  question: String
  description: String
  categories: [CategoryMetadata] @derivedFrom(field: "market")
  marketType: MarketType!
  period: MarketPeriod!
  scoringRule: String!
  status: String!
  report: MarketReport
  resolvedOutcome: String
  mdm: MarketDisputeMechanism!
  marketHistory: [MarketHistory] @derivedFrom(field: "market")
}

type MarketHistory @entity {
  market: Market!
  event: String!
  status: String
  report: MarketReport
  resolvedOutcome: String
  blockNumber: Int!
  timestamp: BigInt!
}

type Pool @entity {
  poolId: Int!
  baseAsset: String!
  marketId: Int!
  poolStatus: String!
  scoringRule: String!
  swapFee: String!
  totalSubsidy: String!
  totalWeight: String!
  historicalPool: [HistoricalPool] @derivedFrom(field: "pool")
}

type HistoricalPool @entity {
  pool: Pool!
  event: String!
  blockNumber: Int!
  timestamp: BigInt!
}

type CategoryMetadata @entity {
  market: Market!
  name: String!
  ticker: String
  img: String
  color: String
}

type MarketType @jsonField {
  Categorical: String
  Scalar: String
}

type MarketPeriod @jsonField {
  Block: String
  Timestamp: String
}

enum MarketStatus {
  Active,
  CollectingSubsidy,
  InsufficientSubsidy,
  Reported,
  Disputed,
  Rejected,
  Cancelled
}

type MarketReport @jsonField {
  at: Int!
  by: String!
  outcome: OutcomeReport!
}

type OutcomeReport @jsonField {
  Categorical: Int
  Scalar: Int
}

type MarketDisputeMechanism @jsonField {
  Authorized: String
  Court: Boolean
  SimpleDisputes: Boolean
}